import pandas as pd
import numpy as np
import matplotlib as mpl
import matplotlib.pyplot as plt

df_can = pd.read_csv("canada.csv")

print("Data read into a pandas dataframe!")
df_can.set_index("Country", inplace=True)

# useful for plotting later on
years = list(map(str, range(1980, 2014)))

mpl.style.use(["ggplot"])  # optional: for ggplot-like style

# Let's use a pie chart to explore the proportion (percentage) of new
# immigrants grouped by continents for the entire time period from 1980 to 2013.

# group countries by continents and apply sum() function
df_continents = df_can.groupby("Continent", axis=0).sum()

# note: the output of the groupby method is a `groupby' object.
# we can not use it further until we apply a function (eg .sum())
print(type(df_can.groupby("Continent", axis=0)))

colors_list = [
    "gold",
    "yellowgreen",
    "lightcoral",
    "lightskyblue",
    "lightgreen",
    "pink",
]
explode_list = [
    0.1,
    0,
    0,
    0,
    0.1,
    0.1,
]  # ratio for each continent with which to offset each wedge.

df_continents["Total"].plot(
    kind="pie",
    figsize=(10, 9),
    autopct="%1.1f%%",
    startangle=90,
    shadow=True,
    labels=None,  # turn off labels on pie chart
    pctdistance=1.12,  # the ratio between the center of each pie slice and the start of the text generated by autopct
    colors=colors_list,  # add custom colors
    explode=explode_list,  # 'explode' lowest 3 continents
)

# scale the title up by 12% to match pctdistance
plt.title("Immigration to Canada by Continent [1980 - 2013]", y=1.12, fontsize=15)

plt.axis("equal")

# add legend
plt.legend(labels=df_continents.index, loc="upper left", fontsize=7)

plt.show()

# Now draw a chart for 2013 only
explode_list = [
    0.0,
    0,
    0,
    0.1,
    0.1,
    0.2,
]  # ratio for each continent with which to offset each wedge.

df_continents["2013"].plot(
    kind="pie",
    figsize=(15, 9),
    autopct="%1.1f%%",
    startangle=90,
    shadow=True,
    labels=None,  # turn off labels on pie chart
    pctdistance=1.12,  # the ratio between the pie center and start of text label
    explode=explode_list,  # 'explode' lowest 3 continents
)

# scale the title up by 12% to match pctdistance
plt.title("Immigration to Canada by Continent in 2013", y=1.12)
plt.axis("equal")

# add legend
plt.legend(labels=df_continents.index, loc="upper left")

# show plot
plt.show()
